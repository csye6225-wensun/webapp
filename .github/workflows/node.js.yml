# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  pull_request:
    branches: [ "main" ]

env:
  DB_HOST: 127.0.0.1
  DB_USER: root
  DB_PASSWORD: root
  DB_DATABASE: assignment
  RESTORE: .test.sql

jobs:
  integration_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]

    steps:
    # - name: Initialize MySQL
    #   run: sudo systemctl start mysql.service

    # - name: Boost user
    #   run: |
    #       mysql -e "ALTER USER '${{ env.DB_USER }}'@'localhost' \
    #       IDENTIFIED WITH mysql_native_password BY 'root';" \
    #       -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}

    # - name: Create database
    #   run: |
    #       mysql -e "CREATE DATABASE assignment;" \
    #       -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}

    # - name: Create env file
    #   run: |
    #       echo "DATABASE_HOST=${{ env.DB_HOST }}
    #             DATABASE_USER=${{ env.DB_USER }}
    #             DATABASE_PASSWORD=${{ env.DB_PASSWORD }}
    #             DATABASE_DB=${{ env.DB_DATABASE }}
    #             DATABASE_DIALECT=mysql
    #             LOG_LEVEL=debug
    #             LOG_FILE_PATH=logs/webapp.log
    #             REGION=none
    #             SNS_ARN=arn:aws:sns:us-west-1:656825459572:dev" > /opt/.env

    # - uses: actions/checkout@v3
    # - name: Use Node.js ${{ matrix.node-version }}
    #   uses: actions/setup-node@v3
    #   with:
    #     node-version: ${{ matrix.node-version }}
    #     cache: 'npm'
    # - run: npm ci
    # - run: npm test

    - name: Configure AWS Credentials 1
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-1

    - name: Configure AWS Credentials 2
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEMO }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEMO }}
        aws-region: us-west-1
    
    - name: Get shared images
      run: |
          aws ec2 describe-images --executable-users 816577563915