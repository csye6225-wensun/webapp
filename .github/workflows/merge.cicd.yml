name: CICD when merge

on:
  push:
    branches: [ "main" ]

env:
  PACKER_LOG: 1
  DB_HOST: 127.0.0.1
  DB_USER: root
  DB_PASSWORD: root
  DB_DATABASE: assignment
  RESTORE: .test.sql

jobs:
  integration_test_and_packer_build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    # - name: Initialize MySQL
    #   run: sudo systemctl start mysql.service

    # - name: Boost user
    #   run: |
    #       mysql -e "ALTER USER '${{ env.DB_USER }}'@'localhost' \
    #       IDENTIFIED WITH mysql_native_password BY 'root';" \
    #       -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}

    # - name: Create database
    #   run: |
    #       mysql -e "CREATE DATABASE assignment;" \
    #       -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}
    
    # - name: Create env file
    #   run: |
    #       echo "DATABASE_HOST=${{ env.DB_HOST }}
    #             DATABASE_USER=${{ env.DB_USER }}
    #             DATABASE_PASSWORD=${{ env.DB_PASSWORD }}
    #             DATABASE_DB=${{ env.DB_DATABASE }}
    #             DATABASE_DIALECT=mysql
    #             LOG_LEVEL=debug
    #             LOG_FILE_PATH=logs/webapp.log
    #             REGION=none
    #             SNS_ARN=arn:aws:sns:us-west-1:656825459572:dev" > /opt/.env

    # - uses: actions/checkout@v3
    # - name: Use Node.js ${{ matrix.node-version }}
    #   uses: actions/setup-node@v3
    #   with:
    #     node-version: ${{ matrix.node-version }}
    #     cache: 'npm'
    # - run: npm ci
    # - run: npm test

    # - run: zip -r webapp.zip .

    # - name: Setup Packer
    #   uses: hashicorp/setup-packer@main
    #   with:
    #     packer_version: '1.9.4'

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-1

    # - name: Packer init
    #   run: packer init aws-debian.pkr.hcl

    # - name: Packer build
    #   run: packer build aws-debian.pkr.hcl